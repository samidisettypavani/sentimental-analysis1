# -*- coding: utf-8 -*-
"""pavani1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UAExegSdO0O9LCcnT4LFH5pLHUrL9zWj
"""

#from google.colab import drive
#drive.mount('/content/drive')

"""### ***Sentiment Analysis of Instagram Text Classificaton in  NLP ***

**Sentiment analysis is the use of natural language processing, text analysis, computational linguistics, and biometrics to systematically identify, extract, quantify, and study affective states and subjective information.**

![](attachment:a0df167c-c306-4a91-8fc5-ed42dbf3a08a.PNG)](http://)

## **Dataset **

***In our dataset a description column is the basis for predict the variety column present the  prediction of the variety . ***

#### Description  Column   present  the text. **

#### Variety      Columm   present the variety according to text **

### Goal

#### To given Text will predict to the right varitey of according text

### Number of Variety in dataset for variety Column

'White Blend', 'Portuguese Red', 'Pinot Gris', 'Riesling',
,       'Pinot Noir', 'Tempranillo-Merlot', 'Frappato', 'Gewürztraminer',
,       'Cabernet Sauvignon', 'Nerello Mascalese', 'Chardonnay', 'Malbec',
,       'Tempranillo Blend', 'Meritage', 'Red Blend', 'Merlot',
,       "Nero d'Avola", 'Chenin Blanc', 'Gamay', 'Sauvignon Blanc',
,       'Viognier-Chardonnay', 'Primitivo', 'Catarratto', 'Inzolia',
,       'Petit Verdot', 'Monica', 'Bordeaux-style White Blend', 'Grillo',
,       'Sangiovese', 'Cabernet Franc', 'Champagne Blend',
,       'Bordeaux-style Red Blend', 'Aglianico', 'Petite Sirah',
,       'Touriga Nacional', 'Carmenère', 'Albariño', 'Petit Manseng',
,       'Rosé', 'Zinfandel', 'Vernaccia', 'Rosato', 'Grüner Veltliner',
,       'Viognier', 'Vermentino', 'Grenache Blanc', 'Syrah', 'Nebbiolo',
,       'Shiraz-Cabernet Sauvignon', 'Pinot Blanc', 'Alsace white blend',
,       'Barbera', 'Rhône-style Red Blend', 'Portuguese White', 'Graciano',
,       'Tannat-Cabernet', 'Sauvignon', 'Sangiovese Grosso', 'Torrontés',
,       'Prugnolo Gentile', 'G-S-M', 'Verdejo', 'Fumé Blanc', 'Furmint',
,       'Pinot Bianco', 'Bonarda', 'Shiraz', 'Montepulciano', 'Moscato',
,       'Grenache', 'Ugni Blanc-Colombard', 'Syrah-Viognier',
,       'Blaufränkisch', 'Friulano', 'Assyrtico', 'Carignan-Grenache',
,       'Sagrantino', 'Savagnin', 'Cabernet Sauvignon-Syrah', 'Prosecco',
,       'Vignoles', 'Sparkling Blend', 'Muscat', 'Muscadelle',
,       'Shiraz-Viognier', 'Garganega', 'Pinot Grigio', 'Tempranillo',
,       'Zierfandler', 'Cortese', 'Mencía', 'Zweigelt', 'Melon',
,       'Rhône-style White Blend', 'Vidal', 'Cannonau', 'Verdelho',
,       'Marsanne', 'Scheurebe', 'Kerner', 'Syrah-Grenache', 'Dolcetto',
,       'Vilana', 'Glera', 'Viura', 'Garnacha Tintorera', 'Pinot Nero',
,       'Roter Veltliner', 'Pinotage', 'Sémillon', 'Pinot Noir-Gamay',
,       'Antão Vaz', 'Cabernet Sauvignon-Carmenère', 'Verdejo-Viura',
,       'Verduzzo', 'Verdicchio', 'Silvaner', 'Colombard', 'Carricante',
,       'Sylvaner', 'Fiano', 'Früburgunder', 'Sousão', 'Roussanne',
,       'Avesso', 'Cinsault', 'Chinuri', 'Tinta Miúda',
,       'Muscat Blanc à Petits Grains', 'Portuguese Sparkling',
,       'Monastrell', 'Xarel-lo', 'Greco', 'Trebbiano',
,       'Corvina, Rondinella, Molinara', 'Port', 'Chenin Blanc-Chardonnay',
,       'Insolia', 'Merlot-Malbec', 'Ribolla Gialla',
,       'Cabernet Sauvignon-Merlot', 'Duras', 'Weissburgunder', 'Roditis',
,       'Traminer', 'Papaskarasi', 'Tannat-Syrah', 'Marsanne-Roussanne',
,       'Charbono', 'Merlot-Argaman', 'Prié Blanc', 'Sherry',
,       'Provence red blend', 'Tannat', 'Zibibbo', 'Falanghina',
,       'Garnacha', 'Negroamaro', 'Mourvèdre', 'Syrah-Cabernet',
,       'Müller-Thurgau', 'Pinot Meunier', 'Cabernet Sauvignon-Sangiovese',
,       'Austrian Red Blend', 'Teroldego', 'Pansa Blanca',
,       'Muskat Ottonel', 'Sauvignon Blanc-Semillon', 'Claret',
,       'Semillon-Sauvignon Blanc', 'Bical', 'Moscatel', 'Rosado',
,       'Viura-Chardonnay', 'Baga', 'Malvasia Bianca',
,       'Gelber Muskateller', 'Malbec-Merlot', 'Monastrell-Syrah',
,       'Malbec-Tannat', 'Malbec-Cabernet Franc', 'Turbiana', 'Refosco',
,       'Alvarinho', 'Manzoni', 'Aragonês', 'Agiorgitiko', 'Malagousia',
,       'Assyrtiko', 'Ruché', 'Welschriesling', 'Tinta de Toro',
,       'Cabernet Moravia', 'Rieslaner', 'Traminette', 'Chambourcin',
,       'Nero di Troia', 'Lambrusco di Sorbara', 'Cesanese',
,       'Feteasca Neagra', 'Lagrein', 'Tinta Fina', 'St. Laurent',
,       'Marsanne-Viognier', 'Cabernet Sauvignon-Shiraz',
,       'Syrah-Cabernet Sauvignon', 'Gewürztraminer-Riesling',
,       'Pugnitello', 'Cerceal', 'Touriga Nacional Blend',
,       'Austrian white blend', 'Tocai', 'Tinta Roriz',
,       'Chardonnay-Viognier', 'Fernão Pires',
,       'Cabernet Franc-Cabernet Sauvignon', 'Grenache-Syrah',
,       'Seyval Blanc', 'Muscat Canelli', 'Cabernet Merlot',
,       'Tempranillo-Cabernet Sauvignon', 'Arinto', 'Aragonez',
,       'Merlot-Cabernet Franc', 'Syrah-Petite Sirah', 'Cabernet Blend',
,       'Maturana', 'Pecorino', 'Rotgipfler', 'Kinali Yapincak',
,       'Cabernet Franc-Carmenère', 'Magliocco', 'Gamay Noir',
,       'Sauvignon Gris', 'Spätburgunder', 'Picpoul', 'Vidal Blanc',
,       'Albanello', 'White Port', 'Arneis', 'Malvasia', 'Plavac Mali',
,       'Lemberger', 'Saperavi', 'Altesse', 'Blanc du Bois',
,       'Provence white blend', 'Nosiola', 'Dornfelder',
,       'Roussanne-Viognier', 'Ojaleshi', 'Godello', 'Mondeuse',
,       'Perricone', 'Pedro Ximénez', 'Auxerrois', 'Syrah-Merlot',
,       'Albana', 'Muskat', 'Lambrusco', 'Cabernet Sauvignon-Malbec',
,       'Tinto Fino', 'Malbec-Cabernet Sauvignon', 'Moschofilero',
,       'Grechetto', 'Encruzado', 'Carignano', 'Cabernet Franc-Merlot',
,       'Torbato', 'Syrah-Petit Verdot', 'Garnacha Blanca', 'Pallagrello',
,       'Morava', 'Syrah-Mourvèdre', 'Aleatico', 'Carcajolu', 'Kisi',
,       'Shiraz-Grenache', 'Palomino', 'Grenache-Carignan', 'Nascetta',
,       'Siria', 'Malbec-Syrah', 'Asprinio', 'Feteascǎ Regalǎ',
,       'Lambrusco Grasparossa', 'Marselan', 'Tocai Friulano', 'Schiava',
,       'Alfrocheiro', 'Chardonnay-Semillon', 'Corvina', 'Norton',
,       'Alicante Bouschet', 'Tokaji', 'Moscadello',
,       'Cabernet Sauvignon-Tempranillo', 'Carignan', 'Loureiro-Arinto',
,       'Cabernet-Syrah', 'Sauvignon Blanc-Chardonnay', 'Symphony',
,       'Edelzwicker', 'Madeira Blend', 'Black Muscat', 'Grenache Noir',
,       'Durella', 'Xinomavro', 'Tinto del Pais',
,       'Merlot-Cabernet Sauvignon', 'Cercial', 'Johannisberg Riesling',
,       'Petite Verdot', 'Passerina', 'Valdiguié',
,       'Colombard-Sauvignon Blanc', 'Kangoun', 'Loureiro', 'Posip',
,       'Uva di Troia', 'Gros and Petit Manseng', 'Jacquère',
,       'Kalecik Karasi', 'Karasakiz', 'Mourvèdre-Syrah', 'Negrette',
,       'Zierfandler-Rotgipfler', 'Clairette', 'Raboso', 'País', 'Mauzac',
,       'Pinot Auxerrois', 'Chenin Blanc-Sauvignon Blanc', 'Diamond',
,       'Marzemino', 'Tinta Barroca', 'Chardonnay-Sauvignon Blanc',
,       'Castelão', 'Trebbiano Spoletino', 'Teran', 'Trepat', 'Freisa',
,       'Neuburger', 'Sämling', 'Chasselas', 'Hárslevelü', 'Trincadeira',
,       'Merlot-Tannat', 'Rkatsiteli', 'Melnik', 'Siegerrebe',
,       'Trousseau Gris', 'Grenache Blend', 'Gros Manseng',
,       'Portuguese Rosé', 'Brachetto', 'Mantonico', 'Ekigaïna',
,       'Muskateller', 'Aligoté', 'Sangiovese Cabernet',
,       'Touriga Nacional-Cabernet Sauvignon', 'Muscat Blanc', 'Argaman',
,       'Viognier-Roussanne', 'Pallagrello Bianco', 'Bobal',
,       'Malvasia Istriana', 'Cabernet Sauvignon-Cabernet Franc',
,       'Baco Noir', 'Veltliner', 'Tempranillo-Tannat', 'Morillon',
,       'Touriga Franca', 'Picolit', 'Barbera-Nebbiolo', 'Prieto Picudo',
,       'Gaglioppo', 'Tokay', 'Sacy', 'Piedirosso', 'Piquepoul Blanc',
,       'Mansois', 'Chardonnay-Sauvignon', 'Tempranillo-Garnacha',
,       'Carmenère-Cabernet Sauvignon', 'Chenin Blanc-Viognier',
,       'Susumaniello', 'Vitovska', 'Orange Muscat', 'Grauburgunder',
,       'Carignane', 'Moscatel Roxo', 'Tannat-Merlot', 'Nerello Cappuccio',
,       'Counoise', 'Macabeo', 'Mazuelo', 'Sauvignon-Sémillon',
,       'Tinta del Pais', 'Vranec', 'Mavrud', "Cesanese d'Affile",
,       'Moscato Giallo', 'Debit', 'Verdil', 'Cabernet',
,       'Verduzzo Friulano ', 'Treixadura', "Loin de l'Oeil",
,       'Coda di Volpe', 'Grenache-Mourvèdre', 'Forcallà', 'Viura-Verdejo',
,       'Bombino Bianco', 'Pinot-Chardonnay', 'Syrah-Tempranillo',
,       'Cabernet Sauvignon-Barbera', 'Merlot-Cabernet',
,       "Muscat d'Alexandrie", 'Jaen', 'Tinta del Toro', 'Timorasso',
,       'Pigato', 'Sangiovese-Cabernet Sauvignon', 'Shiraz-Cabernet',
,       'Viognier-Gewürztraminer', 'Prunelard',
,       'Sauvignon Blanc-Chenin Blanc', 'Gros Plant',
,       'Malbec-Petit Verdot', 'Colombard-Ugni Blanc', 'Grignolino',
,       'Garnacha-Syrah', 'Rufete', 'Tempranillo-Shiraz', 'Mtsvane',
,       'Chardonnay-Pinot Gris', 'Marawi', 'Chardonnay-Pinot Blanc',
,       'Mataro', 'Tinta Cao', 'Blauer Portugieser', 'Ugni Blanc',
,       'Groppello', 'Semillon-Chardonnay', 'Irsai Oliver', 'Alvarelhão',
,       'Poulsard', 'Grenache-Shiraz', 'Baga-Touriga Nacional', 'Carineña',
,       'Pignoletto', 'Muscatel', 'Mavrodaphne', 'Ciliegiolo',
,       'Viognier-Grenache Blanc', 'Greco Bianco',
,       'Cabernet Sauvignon-Merlot-Shiraz', 'Sciaccerellu', 'Zelen',
,       'Alicante', 'Emir', 'Rosenmuskateller', 'Tsolikouri', 'Narince',
,       'Malbec-Cabernet', 'Touriga', 'Grecanico', 'Carmenère-Syrah',
,       'Madeleine Angevine', 'Mavroudi', 'Pinot Blanc-Pinot Noir',
,       'Muscat Hamburg', 'Tempranillo Blanco', 'Casavecchia',
,       'Pinot Gris-Gewürztraminer', 'White Riesling', 'Tinto Velasco',
,       'Hondarrabi Zuri', 'Nuragus', 'Xynisteri', 'Kadarka',
,       'Sauvignon Musqué', 'Roussanne-Marsanne', 'Incrocio Manzoni',
,       'Terrantez', 'Bual', 'Okuzgozu', 'Rivaner', 'Doña Blanca',
,       'Graševina', 'Lambrusco Salamino', 'Sangiovese-Syrah',
,       'Tannat-Cabernet Franc', 'Thrapsathiri', 'Fer Servadou', 'Mission',
,       'Kekfrankos', 'Cococciola', 'Blauburgunder', 'Marquette',
,       'Romorantin', 'Verdejo-Sauvignon Blanc', 'Braucol',
,       'Malvasia-Viura', 'Savatiano', 'Cabernet Franc-Malbec',
,       'Pallagrello Nero', 'Rebula', 'Vespolina', 'Shiraz-Malbec', 'Rebo',
,       'Macabeo-Chardonnay', 'Tempranillo-Malbec', 'Tamjanika',
,       'Trousseau', 'Bacchus', 'Syrah-Malbec', 'Syrah-Cabernet Franc',
,       'Macabeo-Moscatel', 'Cariñena-Garnacha', 'Plyto',
,       'Códega do Larinho', 'Sideritis', 'Çalkarası', 'Azal',
,       'Moscatel Graúdo', 'Viosinho', 'Moschofilero-Chardonnay',
,       'Paralleda', 'Rara Neagra', 'Malvasia di Candia', 'Maria Gomes',
,       'Molinara', 'Malvar', 'Airen', 'Erbaluce', 'Muscat of Alexandria',
,       'Verdosilla', 'Abouriou', 'Pinot Noir-Syrah', 'Nielluciu',
,       'Malbec-Bonarda', 'Vespaiolo', 'Malbec-Carménère', 'Biancolella',
,       'Sauvignon Blanc-Verdejo', 'Aidani', 'Garnacha-Monastrell',
,       'Vinhão', 'Souzao', 'Roter Traminer', 'Moscatel de Alejandría',
,       'Rolle', 'Tinta Francisca', 'Malvasia Nera', 'Orangetraube',
,       'Riesling-Chardonnay', 'Žilavka', 'Portuguiser', 'Listán Negro',
,       'Pinotage-Merlot', 'Muscadine', 'Maria Gomes-Bical', 'Grolleau',
,       'Zlahtina', 'Syrah-Grenache-Viognier', 'Jacquez', 'Gouveio',
,       'Canaiolo', 'Carignan-Syrah', 'Bombino Nero',
,       'Chardonnay-Riesling', 'Malagouzia-Chardonnay', 'Mavrotragano',
,       'Bovale', 'Frankovka', 'Shiraz-Roussanne', 'Cabernet-Shiraz',
,       'Syrah-Carignan', 'Elbling', 'Gragnano', 'Garnacha Blend',
,       'Pinot Blanc-Chardonnay', 'Schwartzriesling', 'Petit Meslier',
,       'Bastardo', 'Vidadillo', 'Misket', 'Chardonnay Weissburgunder',
,       'Other', 'Robola', 'Merlot-Shiraz', 'Malagouzia', 'Folle Blanche',
,       'Malbec Blend', 'Merlot-Syrah', 'Tamianka', 'Cabernet Pfeffer',
,       'Morio Muskat', 'Rabigato', 'Babić', 'Roviello', 'Yapincak',
,       'Sauvignonasse', 'Viognier-Marsanne', 'Mandilaria', 'Meseguera',
,       'Alvarinho-Chardonnay', 'Saperavi-Merlot', 'Pinot Blanc-Viognier',
,       'Teroldego Rotaliano', 'Biancu Gentile', 'Garnacha-Tempranillo',
,       'Xinisteri', 'Sauvignon Blanc-Sauvignon Gris',
,       'Trebbiano di Lugana', 'Albarossa', 'Ryzlink Rýnský', 'Verdeca',
,       'Cabernet Sauvignon Grenache', 'Tămâioasă Românească',
,       'Black Monukka', 'Merlot-Grenache', 'Vranac', 'Tempranillo-Syrah',
,       'Chardonel', 'Silvaner-Traminer', 'Uvalino',
,       'Merseguera-Sauvignon Blanc', 'Cabernet-Malbec', 'Boğazkere',
,       'Gelber Traminer', 'Vermentino Nero', 'Cayuga', 'Tinta Amarela',
,       'Tinta Negra Mole', 'Moscato Rosa', 'Chelois',
,       'Sauvignon Blanc-Assyrtiko', 'Muscadel', 'Shiraz-Tempranillo',
,       'Roussanne-Grenache Blanc', 'Biancale', 'Ansonica',
,       'Syrah-Bonarda', 'Durif', 'Franconia', 'Malbec-Tempranillo',
,       'Nasco', 'Monastrell-Petit Verdot', 'Sirica', 'Vital', 'Espadeiro',
,       'Apple', 'Pinot Grigio-Sauvignon Blanc', 'Blatina', 'Karalahna',
,       'Feteasca', 'Sercial', 'Valvin Muscat', 'Malvasia Fina',
,       'Roditis-Moschofilero', 'St. Vincent', 'Chancellor', 'Premsal',
,       'Jampal', 'Tokay Pinot Gris', 'Colorino', 'Picapoll', 'Blauburger',
,       'Tinta Madeira', 'Centesimino', 'Grenache Gris', 'Trajadura',
,       'Merlot-Petite Verdot', 'Ramisco', 'Catalanesca',
,       'Garnacha-Cabernet', 'Garnacha-Cariñena', 'Gamza',
,       'Cabernet Franc-Lemberger', 'Chardonnay-Albariño',
,       'Shiraz-Mourvèdre', 'Mavrokalavryta', 'Favorita', 'Babosa Negro',
,       'Tintilia ', 'Dafni', 'Petit Courbu', 'Kotsifali', 'Parraleta',
,       'Moscato di Noto', 'Roscetto', 'Torontel', 'Otskhanuri Sapere',
,       'Viognier-Valdiguié', 'Trollinger', 'Tsapournakos', 'Francisa',
,       'Kuntra', 'Pignolo', 'Caprettone', 'Ondenc', 'Athiri',
,       'Bobal-Cabernet Sauvignon'
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import sklearn.preprocessing
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline
sns.set()

data = pd.read_csv('/content/Assignment Data.csv')
df = data.copy()

df.dtypes

df=df.astype(str,errors = 'raise')
df.dtypes

missing_values = ["NaN"]
df = pd.read_csv('/content/Assignment Data.csv', na_values = missing_values)

df.isnull().sum()

median = df['price'].median()
df['price'].fillna(median, inplace=True)
print(median)
df[['price']].isnull().sum()

df = df.fillna(df.mode().iloc[0])

df.isnull().sum()

df

df.shape

dfs = pd.DataFrame(data = df , columns=['description','variety'])
df = dfs.copy()

df

df['variety'].unique()

df['description'].unique()

df['description	'] = df.drop(['variety'], axis=1)
X = df['description	']
df['variety'] = df['variety']
y = df['variety']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0,shuffle=True )

from sklearn.feature_extraction.text import CountVectorizer
count_vect = CountVectorizer()
X_train_counts = count_vect.fit_transform(X_train)
X_train_counts.shape

# TF-IDF
from sklearn.feature_extraction.text import TfidfTransformer
tfidf_transformer = TfidfTransformer()
X_train_tfidf = tfidf_transformer.fit_transform(X_train_counts)
X_train_tfidf.shape

X_train_tfidf

"""**Naive Bayes Algorithm**"""

# Machine Learning
# Training Naive Bayes (NB) classifier on training data.
from sklearn.naive_bayes import MultinomialNB
clf = MultinomialNB().fit(X_train_tfidf, y_train)

# Building a pipeline: We can write less code and do all of the above, by building a pipeline as follows:
# The names ‘vect’ , ‘tfidf’ and ‘clf’ are arbitrary but will be used later.
# We will be using the 'text_clf' going forward.
from sklearn.pipeline import Pipeline

text_clf = Pipeline([('vect', CountVectorizer()), ('tfidf', TfidfTransformer()), ('clf', MultinomialNB())])

text_clf = text_clf.fit(X_train, y_train)

text_clf

import numpy as np
predicted = text_clf.predict(X_test)
np.mean(predicted == y_test)

from sklearn.metrics import accuracy_score

accuracy_dt =accuracy_score(y_test,predicted)
print("Accuracy: {}".format(accuracy_dt))

"""**support vector machine**"""

from sklearn.linear_model import SGDClassifier
text_clf_svm = Pipeline([('vect', CountVectorizer()), ('tfidf', TfidfTransformer()),
                         ('clf-svm', SGDClassifier(loss='hinge', penalty='l2',alpha=1e-3, max_iter=5, random_state=42))])

text_clf_svm = text_clf_svm.fit(X_train,y_train)

predicted_svm = text_clf_svm.predict(X_test)

accuracy_svc = np.mean(predicted_svm == y_test)
accuracy_svc

"""# NLTK
# Removing stop words
"""

!pip install nltk

import nltk

nltk.download('stopwords')

from nltk.stem.snowball import SnowballStemmer
stemmer = SnowballStemmer("english", ignore_stopwords=True)

# Stemming Code

#import nltk
#nltk.download()

#from nltk.stem.snowball import SnowballStemmer
#stemmer = SnowballStemmer("english", ignore_stopwords=True)

class StemmedCountVectorizer(CountVectorizer):
    def build_analyzer(self):
        analyzer = super(StemmedCountVectorizer, self).build_analyzer()
        return lambda doc: ([stemmer.stem(w) for w in analyzer(doc)])

stemmed_count_vect = StemmedCountVectorizer(stop_words='english')

"""**Naive Bayes Algorithm**"""

from sklearn.pipeline import Pipeline
text_clf = Pipeline([('vect', CountVectorizer(stop_words='english')), ('tfidf', TfidfTransformer()),
                     ('clf', MultinomialNB())])

text_mnb_stemmed = Pipeline([('vect', stemmed_count_vect), ('tfidf', TfidfTransformer()),
                             ('mnb', MultinomialNB(fit_prior=False))])

text_mnb_stemmed = text_mnb_stemmed.fit(X_train, y_train)

predicted_mnb_stemmed = text_mnb_stemmed.predict(X_test)

accury =np.mean(predicted_mnb_stemmed == y_test)
accury

"""**support vector machine**




"""

from sklearn.linear_model import SGDClassifier
text_clf_svm = Pipeline([('vect', CountVectorizer(stop_words='english')), ('tfidf', TfidfTransformer()),
                         ('clf-svm', SGDClassifier(loss='hinge', penalty='l2',alpha=1e-3, max_iter=5, random_state=42))])

text_clf_svm = text_clf_svm.fit(X_train,y_train)

predicted_svm = text_clf_svm.predict(X_test)

accuracy_1 =np.mean(predicted_svm == y_test)
accuracy_1

"""Comparison"""

comparison_dict={"Algorithm":["Naive Bayes Algorithm","support vector machine"],
                 "Accuracy":[accuracy_dt,accuracy_svc]
                }

comparison = pd.DataFrame(comparison_dict)
comparison.sort_values([ 'Accuracy'], ascending=False)

"""After removing stop words comperison"""

comparison_dict={"Algorithm":["Naive Bayes Algorithm","support vector machine"],
                 "Accuracy":[accury,accuracy_1]
                }

comparison = pd.DataFrame(comparison_dict)
comparison.sort_values([ 'Accuracy'], ascending=False)

